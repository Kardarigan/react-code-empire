{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nexport const Count_Animation = (targetNumber, duration = 2000, threshold = 0.5) => {\n  _s();\n  const [hasCounted, setHasCounted] = useState(false);\n  const [count, setCount] = useState(0);\n  const elementRef = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      const [entry] = entries;\n      if (entry.isIntersecting && !hasCounted) {\n        setHasCounted(true);\n      }\n    }, {\n      threshold\n    });\n    if (elementRef.current) {\n      observer.observe(elementRef.current);\n    }\n    return () => {\n      if (elementRef.current) {\n        observer.unobserve(elementRef.current);\n      }\n    };\n  }, [hasCounted, threshold]);\n  useEffect(() => {\n    if (hasCounted) {\n      let start = 0;\n      const increment = targetNumber / (duration / 10);\n      const interval = setInterval(() => {\n        start += increment;\n        if (start >= targetNumber) {\n          setCount(targetNumber);\n          clearInterval(interval);\n        } else {\n          setCount(Math.ceil(start));\n        }\n      }, 10);\n      return () => clearInterval(interval);\n    }\n  }, [hasCounted, targetNumber, duration]);\n  return {\n    count,\n    elementRef\n  };\n};\n_s(Count_Animation, \"dD+nz/Ps4bSybIPAjT3tgMQ3EHI=\");\n_c = Count_Animation;\nvar _c;\n$RefreshReg$(_c, \"Count_Animation\");","map":{"version":3,"names":["useState","useEffect","useRef","Count_Animation","targetNumber","duration","threshold","_s","hasCounted","setHasCounted","count","setCount","elementRef","observer","IntersectionObserver","entries","entry","isIntersecting","current","observe","unobserve","start","increment","interval","setInterval","clearInterval","Math","ceil","_c","$RefreshReg$"],"sources":["C:/Users/V/Desktop/react-code-empire/src/comps/Commons/Count_Animation.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\n\r\nexport const Count_Animation = (\r\n  targetNumber,\r\n  duration = 2000,\r\n  threshold = 0.5\r\n) => {\r\n  const [hasCounted, setHasCounted] = useState(false);\r\n  const [count, setCount] = useState(0);\r\n  const elementRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        const [entry] = entries;\r\n        if (entry.isIntersecting && !hasCounted) {\r\n          setHasCounted(true);\r\n        }\r\n      },\r\n      { threshold }\r\n    );\r\n\r\n    if (elementRef.current) {\r\n      observer.observe(elementRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (elementRef.current) {\r\n        observer.unobserve(elementRef.current);\r\n      }\r\n    };\r\n  }, [hasCounted, threshold]);\r\n\r\n  useEffect(() => {\r\n    if (hasCounted) {\r\n      let start = 0;\r\n      const increment = targetNumber / (duration / 10);\r\n      const interval = setInterval(() => {\r\n        start += increment;\r\n        if (start >= targetNumber) {\r\n          setCount(targetNumber);\r\n          clearInterval(interval);\r\n        } else {\r\n          setCount(Math.ceil(start));\r\n        }\r\n      }, 10);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [hasCounted, targetNumber, duration]);\r\n\r\n  return { count, elementRef };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEnD,OAAO,MAAMC,eAAe,GAAGA,CAC7BC,YAAY,EACZC,QAAQ,GAAG,IAAI,EACfC,SAAS,GAAG,GAAG,KACZ;EAAAC,EAAA;EACH,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMY,UAAU,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAG,IAAIC,oBAAoB,CACtCC,OAAO,IAAK;MACX,MAAM,CAACC,KAAK,CAAC,GAAGD,OAAO;MACvB,IAAIC,KAAK,CAACC,cAAc,IAAI,CAACT,UAAU,EAAE;QACvCC,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC,EACD;MAAEH;IAAU,CACd,CAAC;IAED,IAAIM,UAAU,CAACM,OAAO,EAAE;MACtBL,QAAQ,CAACM,OAAO,CAACP,UAAU,CAACM,OAAO,CAAC;IACtC;IAEA,OAAO,MAAM;MACX,IAAIN,UAAU,CAACM,OAAO,EAAE;QACtBL,QAAQ,CAACO,SAAS,CAACR,UAAU,CAACM,OAAO,CAAC;MACxC;IACF,CAAC;EACH,CAAC,EAAE,CAACV,UAAU,EAAEF,SAAS,CAAC,CAAC;EAE3BL,SAAS,CAAC,MAAM;IACd,IAAIO,UAAU,EAAE;MACd,IAAIa,KAAK,GAAG,CAAC;MACb,MAAMC,SAAS,GAAGlB,YAAY,IAAIC,QAAQ,GAAG,EAAE,CAAC;MAChD,MAAMkB,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCH,KAAK,IAAIC,SAAS;QAClB,IAAID,KAAK,IAAIjB,YAAY,EAAE;UACzBO,QAAQ,CAACP,YAAY,CAAC;UACtBqB,aAAa,CAACF,QAAQ,CAAC;QACzB,CAAC,MAAM;UACLZ,QAAQ,CAACe,IAAI,CAACC,IAAI,CAACN,KAAK,CAAC,CAAC;QAC5B;MACF,CAAC,EAAE,EAAE,CAAC;MAEN,OAAO,MAAMI,aAAa,CAACF,QAAQ,CAAC;IACtC;EACF,CAAC,EAAE,CAACf,UAAU,EAAEJ,YAAY,EAAEC,QAAQ,CAAC,CAAC;EAExC,OAAO;IAAEK,KAAK;IAAEE;EAAW,CAAC;AAC9B,CAAC;AAACL,EAAA,CAlDWJ,eAAe;AAAAyB,EAAA,GAAfzB,eAAe;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}