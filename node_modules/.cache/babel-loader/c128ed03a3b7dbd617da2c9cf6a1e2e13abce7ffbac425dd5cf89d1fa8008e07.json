{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\V\\\\Desktop\\\\react-code-empire\\\\src\\\\comps\\\\Company\\\\Numbers.js\",\n  _s = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { about } from \"../../data/Constants\";\n\n// Custom hook for counting numbers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useCountToNumber = (targetNumber, duration) => {\n  _s();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    let start = 0;\n    const increment = targetNumber / (duration / 10);\n    const interval = setInterval(() => {\n      start += increment;\n      if (start >= targetNumber) {\n        setCount(targetNumber);\n        clearInterval(interval);\n      } else {\n        setCount(Math.ceil(start));\n      }\n    }, 10);\n    return () => clearInterval(interval);\n  }, [targetNumber, duration]);\n  return count;\n};\n_s(useCountToNumber, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\nconst Numbers = () => {\n  _s3();\n  const [hasCounted, setHasCounted] = useState(false);\n  const numbersRef = useRef(null);\n  const [counts, setCounts] = useState([]);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      const [entry] = entries;\n      if (entry.isIntersecting && !hasCounted) {\n        setHasCounted(true);\n      }\n    }, {\n      threshold: 0.5\n    } // Adjust this value if needed\n    );\n    if (numbersRef.current) {\n      observer.observe(numbersRef.current);\n    }\n    return () => {\n      if (numbersRef.current) {\n        observer.unobserve(numbersRef.current);\n      }\n    };\n  }, [hasCounted]);\n  useEffect(() => {\n    if (hasCounted) {\n      var _s2 = $RefreshSig$();\n      const newCounts = _s2(about.numbers.map(_s2(item => {\n        _s2();\n        return useCountToNumber(item.number, 2000);\n      }, \"OLpr96uf0HsKVtoSsj18XIBIEUo=\", false, function () {\n        return [useCountToNumber];\n      })), \"OLpr96uf0HsKVtoSsj18XIBIEUo=\", false, function () {\n        return [useCountToNumber];\n      });\n      setCounts(newCounts);\n    }\n  }, [hasCounted]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bg-blue-50 padding\",\n    ref: numbersRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container grid grid-cols-7 md:gap-x-5 gap-3\",\n      children: about.numbers.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"text-blue-500 title-lg\",\n            children: [hasCounted ? counts[index] : 0, \" +\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"md:text-sm text-[10px] md:mt-3 mt-1\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), index !== about.numbers.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-[1px] bg-slate-950 h-full mx-auto bg-opacity-10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s3(Numbers, \"IhHhV1cXCnFBk9k7pqEEGv7UkzE=\");\n_c = Numbers;\nexport default Numbers;\nvar _c;\n$RefreshReg$(_c, \"Numbers\");","map":{"version":3,"names":["useState","useEffect","useRef","about","jsxDEV","_jsxDEV","useCountToNumber","targetNumber","duration","_s","count","setCount","start","increment","interval","setInterval","clearInterval","Math","ceil","Numbers","_s3","hasCounted","setHasCounted","numbersRef","counts","setCounts","observer","IntersectionObserver","entries","entry","isIntersecting","threshold","current","observe","unobserve","_s2","$RefreshSig$","newCounts","numbers","map","item","number","className","ref","children","index","fileName","_jsxFileName","lineNumber","columnNumber","title","length","_c","$RefreshReg$"],"sources":["C:/Users/V/Desktop/react-code-empire/src/comps/Company/Numbers.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { about } from \"../../data/Constants\";\r\n\r\n// Custom hook for counting numbers\r\nconst useCountToNumber = (targetNumber, duration) => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let start = 0;\r\n    const increment = targetNumber / (duration / 10);\r\n    const interval = setInterval(() => {\r\n      start += increment;\r\n      if (start >= targetNumber) {\r\n        setCount(targetNumber);\r\n        clearInterval(interval);\r\n      } else {\r\n        setCount(Math.ceil(start));\r\n      }\r\n    }, 10);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [targetNumber, duration]);\r\n\r\n  return count;\r\n};\r\n\r\nconst Numbers = () => {\r\n  const [hasCounted, setHasCounted] = useState(false);\r\n  const numbersRef = useRef(null);\r\n  const [counts, setCounts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        const [entry] = entries;\r\n        if (entry.isIntersecting && !hasCounted) {\r\n          setHasCounted(true);\r\n        }\r\n      },\r\n      { threshold: 0.5 } // Adjust this value if needed\r\n    );\r\n\r\n    if (numbersRef.current) {\r\n      observer.observe(numbersRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (numbersRef.current) {\r\n        observer.unobserve(numbersRef.current);\r\n      }\r\n    };\r\n  }, [hasCounted]);\r\n\r\n  useEffect(() => {\r\n    if (hasCounted) {\r\n      const newCounts = about.numbers.map((item) =>\r\n        useCountToNumber(item.number, 2000)\r\n      );\r\n      setCounts(newCounts);\r\n    }\r\n  }, [hasCounted]);\r\n\r\n  return (\r\n    <section className=\"bg-blue-50 padding\" ref={numbersRef}>\r\n      <div className=\"container grid grid-cols-7 md:gap-x-5 gap-3\">\r\n        {about.numbers.map((item, index) => {\r\n          return (\r\n            <div className=\"text-center\" key={index}>\r\n              <h6 className=\"text-blue-500 title-lg\">\r\n                {hasCounted ? counts[index] : 0} +\r\n              </h6>\r\n              <h4 className=\"md:text-sm text-[10px] md:mt-3 mt-1\">\r\n                {item.title}\r\n              </h4>\r\n              {index !== about.numbers.length - 1 && (\r\n                <div className=\"w-[1px] bg-slate-950 h-full mx-auto bg-opacity-10\" />\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Numbers;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}